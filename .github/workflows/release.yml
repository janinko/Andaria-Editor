# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Release job

on:
  push:
    tags:
      - 'pre*'

jobs:
  build:
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
          - { os: ubuntu-latest, type: IMAGE, name: linux }
          - { os: windows-latest, type: EXE, name: windows }
          - { os: macos-latest, type: PKG, name: macos }

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml

    - name: Build with Maven
      run: mvn -B package jpackage:jpackage --file pom.xml -D"jpackage.type=${{ matrix.config.type }}"
      env:
        GITHUB_TOKEN: ${{ github.token }}

    - name: Zip artifact for deployment
      if: matrix.os == 'ubuntu-latest'
      run: pushd target/jpackage/ && zip andaria-editor-liunux.zip ./andaria-editor -r && popd

    - name: 'Upload Artifact (Linux)'
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v4
      with:
        name: andaria-editor-${{ matrix.config.name }}
        path: target/jpackage/andaria-editor-liunux.zip
        retention-days: 5

    - name: 'Upload Artifact (Other)'
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v4
      with:
        name: andaria-editor-${{ matrix.config.name }}
        path: target/jpackage/*
        retention-days: 5

  release:
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Pre Release ${{ github.ref }}
          draft: false
          prerelease: true

      - name: Load artifacts
        uses: actions/download-artifact@v4
        with:
          path: to-upload
          pattern: andaria-editor-*

      - name: list all
        run: tree

      - name: Upload Release Asset (Linux)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: to-upload/andaria-editor-linux/*
          asset_name: linux.zip
          asset_content_type: application/zip

      - name: Upload Release Asset (MacOS)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: to-upload/andaria-editor-macos/*
          asset_name: macos.pkg
          asset_content_type: application/x-newton-compatible-pkg

      - name: Upload Release Asset (Windows)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: to-upload/andaria-editor-windows/*
          asset_name: windows.exe
          asset_content_type: application/vnd.microsoft.portable-executable
